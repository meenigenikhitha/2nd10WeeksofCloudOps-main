1.create two pubic "ubuntu" servers in project-vpc    one is for frontend and another one is for backend
3 copy the rds end point


---------------------------------- FrontEnd---------------------------------------

-------Step-1-------install dependencies ------
 create shell script file "ex:vi test.sh"
 paste below commands


#!/bin/bash

sudo apt update -y

sudo apt install apache2 -y

curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - &&\
sudo apt-get install -y nodejs -y

sudo apt update -y

sudo npm install -g corepack -y     

(#Core modules are built-in libraries that come with the Node.js runtime. They provide essential functionality for various tasks like file handling, HTTP requests, working with stream)

corepack enable

corepack prepare yarn@stable --activate 



-- step-2-----------Modifying config.js
then clone your git repo 
   git clone https://github.com/CloudTechDevOps/2nd10WeeksofCloudOps-main.git
   
  checkout client cd client 

11. edit the config.js

vi client/src/pages/config.js
  
const API_BASE_URL = "http://api.narni.co.in";
 
in above line change to your domain anme
const API_BASE_URL = "http://publicip";
ex;const API_BASE_URL = "http://veera.nanri.co.in(backend loadbalancer url)";


------------------------------------------- step-3 ----------- Run 
12. then go to client directory 
13.run below commands

****(Use npm run build:
When preparing the app for deployment (e.g., to a server or hosting service like AWS, Netlify, or Vercel).
Use npm start:
During development or to start the app in production (for backend apps).)*****
cd /client/src/pages
npm install 
npm run build
cd /cleint
sudo cp -r build/* /var/www/html

your frontend part is completed 





-----------------then connect to backend server---------------------------



----------------- step-1-------
1.create shell script file "ex:vi test.sh"
1.paste below commands

#!/bin/bash

sudo apt update -y

curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - &&\
sudo apt-get install -y nodejs -y

sudo apt update -y

sudo npm install -g corepack -y

corepack enable

corepack prepare yarn@stable --activate 

sudo npm install -g pm2


--------------- step-2-------

3.then clone your git repo 
   git clone https://github.com/CloudTechDevOps/2nd10WeeksofCloudOps-main.git
   cd backend 
4 edit the .env file in bellow path if u dont have any .env file just create in below path

2nd10WeeksofCloudOps-main.git/backend/.env

### add this mater
DB_HOST=db endpoint
DB_USERNAME=admin	#cahnge to nyour rds user name 
DB_PASSWORD="nikhitha"   # change to your rds password
PORT=3306



----------- step-3---------
 then run below command in backend directory
  
npm install
npm install dotenv

sudo pm2 start index.js --name "backendApi"


 in the backend server install mysql #"sudo apt install mysql-server-y"
 systemctl status mysql
 mysql -h db endpoint -u admin -p 
 create database test;
 exit
 mysql -h dbendpoint -u admin -p test <test.sql
 show databeases;
 use test;
 show tables;
 select * from books;

-----------------step-4--------------------------


then take the amis of the servers 

after terraform apply do this process
4.create route 53 private hosted zone with project vpc name is "rds.com"
5. create record  sub domain is book,, select cnamerecord type ,,,, in the value paste your rds end point ,, then create record
6. connect to fbastion server end server
